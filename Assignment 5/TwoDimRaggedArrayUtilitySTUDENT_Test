import static org.junit.Assert.*;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class TwoDimRaggedArrayUtilitySTUDENT_Test {
	//STUDENT fill in dataSetSTUDENT with values, it must be a ragged array
	private double[][] dataSet1 = {{3, 1},{2, 1, 8, 0},{2, 6}};
	private double[][] dataSet2 = {{9, 2},{1},{1},{2, 4, 6, 4}};
	private double[][] dataSet3 = {{5.5},{9.9, 8.8},{0.2, 2.3, 3.4},{4.6, 6.7, 2.2, 6.4, 4.0}};
	//dataSet3 has fewer elements in first row than in other rows
	private double[][] dataSet4 = {{-0.1,2.5},{8.8, -8.8},{-9.4, 0.2, 8.7},{2.1, 5.5, -7.7, -2.1}};
	//dataSet4 has negative elements as well as positive
	private double[][] dataSetSTUDENT = null;
	
	private File inputFile,outputFile;

	@Before
	public void setUp() throws Exception {
		outputFile = new File("TestOut.txt");
	}

	@After
	public void tearDown() throws Exception {
		dataSet1 = dataSet2 = dataSet3 = dataSet4 = null;
		inputFile = outputFile = null;
	}

	/**
	 * Student Test getTotal method
	 * Return the total of all the elements in the two dimensional array
	 */
	@Test
	public void testGetTotal() {
		assertEquals(23.0,TwoDimRaggedArrayUtility.getTotal(dataSet1),.001);
		assertEquals(29.0,TwoDimRaggedArrayUtility.getTotal(dataSet2),.001);
		assertEquals(54.0,TwoDimRaggedArrayUtility.getTotal(dataSet3),.001);
		assertEquals(-0.3,TwoDimRaggedArrayUtility.getTotal(dataSet4),.001);	
	}

	/**
	 * Student Test getAverage method
	 * Return the average of all the elements in the two dimensional array
	 */
	@Test
	public void testGetAverage() {
		assertEquals(2.875,TwoDimRaggedArrayUtility.getAverage(dataSet1),.05);
		assertEquals(3.625,TwoDimRaggedArrayUtility.getAverage(dataSet2),.05);
		assertEquals(4.909,TwoDimRaggedArrayUtility.getAverage(dataSet3),.05);
		assertEquals(-.002,TwoDimRaggedArrayUtility.getAverage(dataSet4),.05);
	}

	/**
	 * Student Test getRowTotal method
	 * Return the total of all the elements of the row.
	 * Row 0 refers to the first row in the two dimensional array
	 */
	@Test
	public void testGetRowTotal() {
		assertEquals(8.0,TwoDimRaggedArrayUtility.getRowTotal(dataSet1,2),.001);
		assertEquals(1.0,TwoDimRaggedArrayUtility.getRowTotal(dataSet2,1),.001);
		assertEquals(5.9,TwoDimRaggedArrayUtility.getRowTotal(dataSet3,2),.001);
		assertEquals(-2.2,TwoDimRaggedArrayUtility.getRowTotal(dataSet4,3),.001);
	}


	/**
	 * Student Test getColumnTotal method
	 * Return the total of all the elements in the column. If a row in the two dimensional array
	 * doesn't have this column index, it is not an error, it doesn't participate in this method.
	 * Column 0 refers to the first column in the two dimensional array
	 */
	@Test
	public void testGetColumnTotal() {
		assertEquals(8.0,TwoDimRaggedArrayUtility.getColumnTotal(dataSet1,1),.001);
		assertEquals(13.0,TwoDimRaggedArrayUtility.getColumnTotal(dataSet2,0),.001);
		assertEquals(17.8,TwoDimRaggedArrayUtility.getColumnTotal(dataSet3,1),.001);
		assertEquals(-2.1,TwoDimRaggedArrayUtility.getColumnTotal(dataSet4,3),.001);
	}


	/**
	 * Student Test getHighestInArray method
	 * Return the largest of all the elements in the two dimensional array.
	 */
	@Test
	public void testGetHighestInArray() {
		assertEquals(8.0,TwoDimRaggedArrayUtility.getHighestInArray(dataSet1),.001);
		assertEquals(9.0,TwoDimRaggedArrayUtility.getHighestInArray(dataSet2),.001);
		assertEquals(9.9,TwoDimRaggedArrayUtility.getHighestInArray(dataSet3),.001);
		assertEquals(8.8,TwoDimRaggedArrayUtility.getHighestInArray(dataSet4),.001);
	}
	

	/**
	 * Test the writeToFile method
	 * write the array to the outputFile File
	 * then read it back to make sure formatted correctly to read
	 * 
	 */
	@Test
	public void testWriteToFile() {
		double[][] array=null;
		fail("Student testWriteToFile not implemented");	
	}

}
